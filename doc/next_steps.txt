============= FAZA 1 ================

1.1.

Pod hitno moram da zamenim ovo svoje mergovanje sa eksternom bibliotekom. Ali pod hitno. To znaci i da cu uzeti drugi renderer.. Da radim babylon i websocket i rust na serveru koji se integrise sa cpp i python i ko zna kojim bibliotekama.. nemam pojma, deluje mi to malo kao overkill.. Jebi ga, kada bih uzeo javascript lepo, mogao bih svasta da radim direkt u browseru.. Sta znam, mozda to i jeste resenje.. babylon + rust na serveru i jos sto nekih libova koji su u ko zna kojim jezicima.. Sve da se to lepo bundluje i cao. Bilo bi malo sporije, ali sta znam, ipak koliko toliko ok.. al sam zapeo za rust :D Da lepo uzmem typescript i da odradim to ko car i zdravo dovidjenja. Imao bih sve mogucnosti.. Ili python, zbog libova.. Ne, ja hocu da podrzim rust.. I lomim glavu tu sa glupostima i gubim vreme zbog cega? Kad jebeno nema biblioteke.. Moram da vidim taj kompajler izmedju cppa i rusta.. Mada je i to upitno koliko ima smisla.. 
Ne vredi kad jebeni python ima najvise biblioteka. A jebi ga, bice i biblioteka u rustu. Kad bi bili rust, js, python i ts jedini jezici, to bi bilo ok.. Trebalo bi da eksplorujem malo taj rust cpp interop.. 

Terase i prozori coskovi. 

Implementirati preseke iz one biblioteke. 
Implementirati algoritam koji treba da resi problem sa presecima. 

Lepak. 

1.2.

- naravno generisanje plana kako ce se uz pomoc masina postaviti to sto treba, isto najjednostavnije moguce, tako da mogu da predjem na fizicko postavljanje na nekakvim modelima, maketama, kako god. Jer ako je negde problem, tu ce biti. Ne treba drndati do savrsenstva ovo sranje, kad je na drugoj strani mozda neizvodljivo.


============= FAZA 2 ================

Kreiranje masina koje mogu da, saradjujuci sa racunarom, postave stiropor na model zgrade.

============= FAZA 3 ================

Isto kao faza 2, ali na pravom objektu.

============= FAZA 4 ================

Prolazak kroz sve faze 1-3, ali se prica usloznjava - nije vise prototip, nego se realizuje ozbiljniji proizvod.

Znaci na prvom mestu, ovde cemo imati razlicite vrste testova. Unit testove na nivou koda, ali i ogroman broj automatski generisanih zgrada i oblika koji treba da sluze tome da potvrde da aplikacija nigde ne puca. Znaci da se potvrdi da se uvek generisu nekakvi planovi. Za odredjene zgrade ce biti i assertovi, znaci kao nekakav integracioni test. Ali sve to malo kasnije. 

============= FAZA 5 ================

Dodatni slojevi, busenja rupa, slojevi imitacije cigle, oluci itd itd.. Mozda tu malo i VR moze da pomogne, tako sto bi covek neke stvari mogao da radi 'iz daljine'.. U sustini, ovde ce biti svega, ali je pitanje koliko ce se od ove faze inicijalno odraditi. Ona je vise onako - ako bude i sta bude, ok, ako ne, bice kasnije. 

