createScene2(engine: BABYLON.Engine, canvas: HTMLCanvasElement, data: any) {
    var scene = new BABYLON.Scene(engine);

    var camera = new BABYLON.FreeCamera("camera1", new BABYLON.Vector3(-20, 30, -40), scene);
    camera.invertRotation = true;
    camera.setTarget(new BABYLON.Vector3(20, 0, 30));
    camera.attachControl(canvas, true);

    var light = new BABYLON.DirectionalLight("dirLight", new BABYLON.Vector3(0, -0.3, 1), scene);
    light.intensity = 1;
    light.position = new BABYLON.Vector3(15, 15, -50);

    var shadowGenerator = new BABYLON.ShadowGenerator(1024, light);

    var totalTriangles = [0,0,0, 30,30,0,  30,0,0,   0,0,0, 0,30,0,  30,30,0];
    var indices = [0, 1, 2, 3, 4, 5];

    var customMesh = new BABYLON.Mesh("custom", scene);

    var vertexData = new BABYLON.VertexData();

    vertexData.positions = totalTriangles;
    vertexData.indices = indices;

    vertexData.applyToMesh(customMesh);

    var customMesh2 = new BABYLON.Mesh("custom2", scene);
    var totalTriangles2 = [0,0,40, 30,30,40,  30,0,40,   0,0,40, 0,30,40,  30,30,40,  ];
    var indices2 = [0, 1, 2, 3, 4, 5, ];
    var vertexData2 = new BABYLON.VertexData();
    vertexData2.positions = totalTriangles2;
    vertexData2.indices = indices2;

    vertexData2.applyToMesh(customMesh2);

    var mat = new BABYLON.StandardMaterial("mat", scene);
    // mat.wireframe = false;
    mat.backFaceCulling = false;
    mat.transparencyMode = 0;
    customMesh.material = mat;
    customMesh2.material = mat;

    shadowGenerator?.getShadowMap()?.renderList?.push(customMesh, customMesh2);
    
    // const axes = new BABYLON.AxesViewer(scene, 100);
    const ground = BABYLON.MeshBuilder.CreateGround("ground", {height: 300, width: 300, subdivisions: 4});

    ground.receiveShadows = true;
    // var mat = new BABYLON.StandardMaterial("mat", scene);
    // mat.wireframe = false;
    // mat.backFaceCulling = false;
    // mat.transparencyMode = 0;
    // customMesh.material = mat;

    return scene; 
}